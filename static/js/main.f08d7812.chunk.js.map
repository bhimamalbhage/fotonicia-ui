{"version":3,"sources":["components/Banner.js","components/Category.js","components/Icons.js","components/Dashboard.js","components/Footer.js","components/Navbar.js","App.js","serviceWorker.js","index.js"],"names":["Banner","className","src","React","Component","Category","props","value","headerTitle","catNo","listItem","slice","map","item","image","Icons","icon","faPhone","style","textAlign","marginTop","faWhatsapp","faMapMarker","faShare","Dashboard","margin","Footer","Navbar","App","state","data","isLoading","componentDidMount","fetch","then","response","json","result","setState","MyData","this","length","index","key","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"oQAiBeA,G,4KAXX,OACI,yBAAKC,UAAU,UACX,yBAAKC,IAAI,sM,GANAC,IAAMC,YC4BZC,MA3Bf,SAAmBC,GAEf,OACI,6BACA,yBAAKL,UAAU,YACX,yBAAKA,UAAU,cACX,2BAAIK,EAAMC,MAAMC,YAAhB,IAA6B,+CAAqBF,EAAMG,MAA3B,KAA7B,KACA,4BAAQR,UAAU,aAAlB,cAEJ,yBAAKA,UAAU,WACVK,EAAMC,MAAMG,SAASC,MAAM,EAAE,GAAGC,KAAI,SAACC,GACnC,OACI,6BACI,yBAAKX,IAAKW,EAAKC,cAMlC,6BACKR,EAAMG,MAAO,IAAK,GAAK,kBAAC,EAAD,S,sBCQrBM,MAzBf,WACI,OACI,yBAAKd,UAAU,SACX,6BACA,kBAAC,IAAD,CAAiBe,KAAMC,IAAShB,UAAU,SAC1C,uBAAGiB,MAAO,CAACC,UAAU,SAASC,UAAU,SAAxC,SAEA,6BACA,kBAAC,IAAD,CAAiBJ,KAAMK,IAAYpB,UAAU,SAC7C,uBAAGiB,MAAO,CAACC,UAAU,SAASC,UAAU,SAAxC,aAEA,6BACA,kBAAC,IAAD,CAAiBJ,KAAMM,IAAarB,UAAU,SAC9C,uBAAGiB,MAAO,CAACC,UAAU,SAASC,UAAU,SAAxC,QAEA,6BACA,kBAAC,IAAD,CAAiBJ,KAAMO,IAAStB,UAAU,SAC1C,uBAAGiB,MAAO,CAACC,UAAU,SAASC,UAAU,SAAxC,YC+BGI,MAlDf,WACI,OACI,6BACI,wBAAIN,MAAO,CAACC,UAAU,SAASM,OAAO,SAAtC,oBACA,yBAAKxB,UAAU,iBACX,yBAAKA,UAAU,eACf,6BACI,yBAAKA,UAAU,QACf,0CAEJ,6BACI,yBAAKA,UAAU,QACf,sCAEJ,6BACI,yBAAKA,UAAU,QACf,4CAEJ,6BACI,yBAAKA,UAAU,QACf,qCAEJ,6BACI,yBAAKA,UAAU,QACf,oCAEJ,6BACI,yBAAKA,UAAU,QACf,0CAEJ,6BACI,yBAAKA,UAAU,QACf,2CAEJ,6BACI,yBAAKA,UAAU,QACf,yCAGJ,yBAAKA,UAAU,WACX,wCACJ,gCAIR,kBAAC,EAAD,QCtCOyB,MATf,WACI,OACI,yBAAKzB,UAAU,UACX,mDACA,yDCKG0B,MATf,WACI,OACI,yBAAK1B,UAAU,UACX,yCACA,uCCmCG2B,E,4MAhCbC,MAAM,CACIC,KAAM,GACNC,WAAW,G,EAGnBC,kBAAoB,WAChBC,MAAM,mEACXC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAM,OAAI,EAAKC,SAAS,CAC1BR,KAAMO,EAAOE,OACbR,WAAW,Q,uDAGN,IAAD,EACsBS,KAAKX,MAAzBC,EADF,EACEA,KADF,EACQC,UACAD,EAAKW,OACrB,OACE,yBAAKxC,UAAU,OACb,kBAAC,EAAD,MACA,yBAAKA,UAAU,aACf,kBAAC,EAAD,OACEuC,KAAKX,MAAME,WAAaS,KAAKX,MAAMC,KAAKlB,KAAI,SAACC,EAAK6B,GAElD,OAAO,kBAAC,EAAD,CAAUC,IAAKD,EAAOnC,MAAOM,EAAMJ,MAAOiC,EAAM,QAG3D,kBAAC,EAAD,W,GA3BcvC,IAAMC,WCIJwC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBtB,MAAK,SAAAuB,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.f08d7812.chunk.js","sourcesContent":["import React from 'react'\r\nimport '../App.css'\r\nclass Banner extends React.Component {\r\n    \r\n\r\n    render(){\r\n    return (\r\n        <div className=\"banner\">\r\n            <img src=\"https://previews.123rf.com/images/avgust01/avgust011903/avgust01190300076/124250674-summer-sale-advertisement-banner-horizontal-banner-with-realistic-glass-bottle-with-message-starfish.jpg\"></img>\r\n            {/* {this.state.images.slice(0,3).map((item)=>{\r\n                return <img src={item}></img>\r\n            })} */}\r\n        </div>\r\n    )\r\n    }\r\n}\r\n\r\nexport default Banner\r\n","import React from 'react'\r\nimport '../App.css'\r\nimport Banner from './Banner'\r\nfunction Category (props){\r\n\r\n    return (\r\n        <div>\r\n        <div className=\"catBlock\">\r\n            <div className=\"catHeading\">\r\n                <p>{props.value.headerTitle} <span>Category no:- {props.catNo} </span> </p>\r\n                <button className=\"btn-green\">View All </button>\r\n            </div>\r\n            <div className=\"itemImg\">\r\n                {props.value.listItem.slice(0,2).map((item)=> {\r\n                   return (\r\n                       <div>\r\n                           <img src={item.image}></img>\r\n                       </div>\r\n                   )\r\n                })}\r\n            </div>\r\n        </div>\r\n        <div>\r\n            {props.catNo %2 ===0 && <Banner />}\r\n        </div>\r\n        </div>\r\n    )\r\n    \r\n}\r\n\r\nexport default Category\r\n","import React from 'react'\r\nimport { faWhatsapp} from \"@fortawesome/free-brands-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faMapMarker, faPhone, faShare } from '@fortawesome/free-solid-svg-icons';\r\nimport '../App.css'\r\n\r\nfunction Icons() {\r\n    return (\r\n        <div className=\"icons\">\r\n            <div>\r\n            <FontAwesomeIcon icon={faPhone} className=\"icon\" />\r\n            <p style={{textAlign:\"center\",marginTop:\"10px\"}}>Call</p>\r\n            </div>\r\n            <div>\r\n            <FontAwesomeIcon icon={faWhatsapp} className=\"icon\"  />\r\n            <p style={{textAlign:\"center\",marginTop:\"10px\"}}>WhatsApp</p>\r\n            </div>\r\n            <div>\r\n            <FontAwesomeIcon icon={faMapMarker} className=\"icon\" />\r\n            <p style={{textAlign:\"center\",marginTop:\"10px\"}}>Map</p>\r\n            </div>\r\n            <div>\r\n            <FontAwesomeIcon icon={faShare} className=\"icon\" />\r\n            <p style={{textAlign:\"center\",marginTop:\"10px\"}}>Share</p>\r\n            </div>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Icons\r\n","import React from 'react'\r\nimport '../App.css'\r\nimport Icons from './Icons'\r\n\r\nfunction Dashboard() {\r\n    return (\r\n        <div>\r\n            <h1 style={{textAlign:\"center\",margin:\"20px\"}}>Shop By Category</h1>\r\n            <div className=\"categoryBlock\">\r\n                <div className=\"categoryDiv\">\r\n                <div>\r\n                    <div className=\"box\"></div>\r\n                    <p>Protection</p>\r\n                </div>\r\n                <div>\r\n                    <div className=\"box\"></div>\r\n                    <p>Frames</p>\r\n                </div>\r\n                <div>\r\n                    <div className=\"box\"></div>\r\n                    <p>Best Selling</p>\r\n                </div>\r\n                <div>\r\n                    <div className=\"box\"></div>\r\n                    <p>Print</p>\r\n                </div>\r\n                <div>\r\n                    <div className=\"box\"></div>\r\n                    <p>Gift</p>\r\n                </div>\r\n                <div>\r\n                    <div className=\"box\"></div>\r\n                    <p>Teddy Bear</p>\r\n                </div>\r\n                <div>\r\n                    <div className=\"box\"></div>\r\n                    <p>Table De...</p>\r\n                </div>\r\n                <div>\r\n                    <div className=\"box\"></div>\r\n                    <p>Photo...</p>\r\n                </div>\r\n                </div>\r\n                <div className=\"seemore\">\r\n                    <h3 >See More</h3>\r\n                <div/>\r\n            </div>\r\n\r\n        </div>\r\n        <Icons />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dashboard\r\n","import React from 'react'\r\nimport '../App.css'\r\nfunction Footer() {\r\n    return (\r\n        <div className=\"footer\">\r\n            <p>Powered by Fotonicia</p>\r\n            <p>#Vocal for Local Startup</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\r\nimport '../App.css'\r\nfunction Navbar() {\r\n    return (\r\n        <div className=\"navbar\">\r\n            <h2>Color Lab</h2>\r\n            <h2>Cart </h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","import React from 'react';\nimport './App.css';\nimport Banner from './components/Banner';\nimport Category from './components/Category';\nimport Dashboard from './components/Dashboard'\nimport Footer from './components/Footer';\nimport Navbar from './components/Navbar';\n\nclass App extends React.Component {\n  state={\n            data: [],\n            isLoading: true\n        }\n    \n    componentDidMount = () =>{\n        fetch('https://jsonware.com/json/688410e8f4013fbe56009d8e1621f2a4.json')\n  .then(response => response.json())\n  .then(result => this.setState({\n      data: result.MyData,\n      isLoading: false\n  }));\n    };\n  render(){\n    const { data, isLoading } = this.state;\n    let noOfCat = data.length;\n  return (\n    <div className=\"App\">\n      <Navbar />\n      <div className=\"container\">\n      <Dashboard />\n      {!this.state.isLoading && this.state.data.map((item,index) =>{\n\n        return <Category key={index} value={item} catNo={index+1} />\n      })}\n      </div>\n    <Footer />\n    </div>\n  );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}